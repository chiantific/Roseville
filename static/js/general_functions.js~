/**
 * This file contains the General Functions javascript namespace.
 * It contains functions that apply both on the front and back
 * end of the application.
 *
 * @namespace GeneralFunctions
 */
var GeneralFunctions = {
    /**
     * Create a dropdown menu to allow the language selection. Should not be called directly.
     * See enableLanguageSelection below.
     *
     * @param {object} $element Selected element button for the language selection.
     */
    createDropdownLanguageSelection: function($element) {
        var html = '<ul class="dropdown-menu" id="language-list">';
        $.each(availableLanguages, function() {
            html += '<li class="language" data-language="' + this + '">'
                + '<a href="#">' + GeneralFunctions.ucaseFirstLetter(this) + '</a></li>';
        });
        html += '</ul>';

        $element.append(html);
    },

    /**
     * Create a popover to allow the language selection. Should not be called directly.
     * See enableLanguageSelection below.
     *
     * @param {object} $element Selected element for the language selection
     */
    createPopoverLanguageSelection: function($element) {
        var html = '<ul id="language-list">';
        $.each(availableLanguages, function() {
        	html += '<li class="language" data-language="' + this + '">'
        			+ GeneralFunctions.ucaseFirstLetter(this) + '</li>';
        });
        html += '</ul>';

        $element.popover({
            'placement': 'top',
            'title': 'Select Language',
            'content': html,
            'html': true,
            'container': 'body',
            'trigger': 'manual'
        });
    },

    /**
     * Create a popover to allow the language selection. Should not be called directly.
     * See enableLanguageSelection below.
     *
     * @param {object} $element Selected element for the language selection
     */
    createToggleLanguageSelection: function($element) {
        text = '';
        data_language = '';
        $.each(availableLanguages, function() {
            if (this != selectedLanguage) {
                data_language = this;
                text = lang['other_language'];
            }
        });
        $element.text(text);
        $element.attr('data-language', data_language);
        $element.addClass('language');
    },

    /**
     * Enables the language selection functionality. Must be called on every page has a
     * language selection button. This method requires the global variable 'availableLanguages'
     * to be initialized before the execution.
     *
     * @param {object} $element Selected element button for the language selection.
     * @param {string} $style "popover", "dropdown" or "toggle", to select the menu style
     */
    enableLanguageSelection: function($element, style="dropdown") {
        // Select Language
        if (style == "popover") {
            this.createPopoverLanguageSelection($element);
        } else if (style == "dropdown") {
            this.createDropdownLanguageSelection($element);
        } else {
            this.createToggleLanguageSelection($element);
        }

        $element.click(function() {
        	if ($('#language-list').length == 0) {
        		$(this).popover('show');
        	} else {
        		$(this).popover('hide');
        	}

            $(this).toggleClass('active');
        });

        $(document).on('click', '.language', function() {
        	// Change language with ajax call and refresh page.
        	var postUrl = GlobalVariables.baseUrl + '/index.php/backend_api/ajax_change_language';
        	var postData = {
                'csrfToken': GlobalVariables.csrfToken,
                'language': $(this).attr('data-language'),
            };
        	$.post(postUrl, postData, function(response) {
        		////////////////////////////////////////////////////
        		console.log('Change Language Response', response);
    			////////////////////////////////////////////////////

        		if (!GeneralFunctions.handleAjaxExceptions(response)) return;
        		document.location.reload(true);

        	}, 'json').fail(GeneralFunctions.ajaxFailureHandler);
        });
    },

    /**
     * Hide the preloader animation
     */
    hidePreloader: function() {
        $("#status").fadeOut("slow");
        $("#preloader").delay(500).fadeOut("slow").remove();
    },

    /**
     * Automatically display or hide the navbar while scrolling
     */
    autoToggleNavbar: function() {
        // Hide .navbar first
        $(".navbar").hide();

        // Fade in .navbar
        $(function() {
            $(window).scroll(function () {
                // set distance user needs to scroll before we fadeIn navbar
                if ($(this).scrollTop() > 200) {
                    $('.navbar').fadeIn();
                } else {
                    $('.navbar').fadeOut();
                }
            });
        });
    }
};
